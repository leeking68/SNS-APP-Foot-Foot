<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	<!-- Mybatis로 Spring 연동시 추가해야 하는 설정  -->
	
	<!-- 1. BasicDataSource 을 스프링 빈으로 등록 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" 	destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@127.0.0.1:1521:XE" />
		<property name="username" value="scott" />
		<property name="password" value="tiger" />
	</bean>  
	
	<!-- 2. SqlSessionFactoryBean을 스프링 빈으로 등록 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:/mappers/**/*.xml" />
		<property name="configLocation" value="classpath:/mybatis-config.xml" />
	</bean>
 
 	<!-- 3. SqlSessionTemplate을 스프링 빈으로 등록 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>

	<!-- 4. transaction manager -->    
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

	<!-- 5. DAO 빈에 의존적 SqlSession 인젝션 클래스에 @Autowired 자동주입 -->

</beans>
